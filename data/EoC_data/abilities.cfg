
#define AE_CHS_ABILITY_PROTECTION_BASE FILTER
    [resistance]
        id=AE_chs_protection
        add=20
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        name= _ "protection"
        special_note={SPECIAL_NOTES_PROTECTION}
        description= _ "Adjacent units of lower level from this side receive a +20% bonus to all resistances (up to a maximum of 50%)."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                {FILTER}
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef

#define AE_CHS_ABILITY_PROTECTION_LEVEL_1
    {AE_CHS_ABILITY_PROTECTION_BASE (level=0)}
#enddef

#define AE_CHS_ABILITY_PROTECTION_LEVEL_2
    {AE_CHS_ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or])}
#enddef

#define AE_CHS_ABILITY_PROTECTION_LEVEL_3
    {AE_CHS_ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or]
    [or]
        level=2
    [/or])}
#enddef

#define AE_CHS_ABILITY_PROTECTION_LEVEL_4
    {AE_CHS_ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or]
    [or]
        level=2
    [/or]
    [or]
        level=3
    [/or])}
#enddef

#define AE_CHS_ABILITY_PROTECTION_LEVEL_5
    {AE_CHS_ABILITY_PROTECTION_BASE (level=0
    [or]
        level=1
    [/or]
    [or]
        level=2
    [/or]
    [or]
        level=3
    [/or]
    [or]
        level=4
    [/or])}
#enddef

#define AE_CHS_DISABLE_ADVANCEMENT_IN_RPG FROM_TYPE TO_TYPE
    [event]
        name=unit_placed,pre_advance
        first_time_only=no
        id=AE_CHS_DISABLE_ADVANCEMENT_IN_RPG__{FROM_TYPE}__{TO_TYPE}
        [filter]
            type={FROM_TYPE}
            formula="'{TO_TYPE}' in advances_to"
        [/filter]
        [filter_condition]
            [AE_is_rpg]
            [/AE_is_rpg]
        [/filter_condition]
        [modify_unit]
            [filter]
                id=$unit.id
            [/filter]
            [object]
                [effect]
                    apply_to=remove_advancement
                    types={TO_TYPE}
                [/effect]
            [/object]
        [/modify_unit]
    [/event]
#enddef

# wmllint: unbalanced-on
#define AE_CHS_ABILITY_PHYSICAL_ENDURANCE
    [dummy]
        id=AE_chs_physical_endurance
        name= _ "physical endurance"
        special_note={SPECIAL_NOTES_PHYSICAL_ENDURANCE}
        description= _ "Units with this ability instantly regenerate half of the damage dealt to them unless its type is arcane, or the damage amount would kill them otherwise (greater than or equals their remaining HP)."
    [/dummy]
    # wmlxgettext: [abilities]
[/abilities]

[event]
    id=ability_AE_chs_physical_endurance_attacker_hits
    name=attacker hits
    first_time_only=no
    [filter_second]
        ability=AE_chs_physical_endurance
    [/filter_second]
    [filter_attack]
        [not]
            type=arcane
        [/not]
    [/filter_attack]

    [fire_event]
        name=AE_chs_physical_endurance_handler
        [primary_unit]
            x,y=$x2,$y2
        [/primary_unit]
        [secondary_unit]
            x,y=$x1,$y1
        [/secondary_unit]
    [/fire_event]
[/event]
[event]
    id=ability_AE_chs_physical_endurance_defender_hits
    name=defender hits
    first_time_only=no
    [filter]
        ability=AE_chs_physical_endurance
    [/filter]
    [filter_second_attack]
        [not]
            type=arcane
        [/not]
    [/filter_second_attack]

    [fire_event]
        name=AE_chs_physical_endurance_handler
        [primary_unit]
            x,y=$x1,$y1
        [/primary_unit]
        [secondary_unit]
            x,y=$x2,$y2
        [/secondary_unit]
    [/fire_event]
[/event]
[event]
    id=ability_AE_chs_physical_endurance_handler
    name=AE_chs_physical_endurance_handler
    first_time_only=no

    # Primary unit: physical endurance user
    # Secondary unit: attacker/defender

    [if]
        {VARIABLE_CONDITIONAL unit.hitpoints greater_than 0}
        [then]
            {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp to_variable damage_inflicted}
            {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp divide      2}
            {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp round       ceil}

            [heal_unit]
                [filter]
                    x,y=$x1,$y1
                [/filter]
                amount=$temp_PHYSICAL_ENDURANCE_restore_hp
                restore_statuses=no
            [/heal_unit]

            [floating_text]
                x,y=$x1,$y1
                text="<span color='#00ff00'>$heal_amount</span>" # wmllint: ignore
            [/floating_text]

            {CLEAR_VARIABLE temp_PHYSICAL_ENDURANCE_restore_hp}
        [/then]
    [/if]
[/event]

[+abilities]
    # wmlxgettext: [/abilities]
#enddef
# wmllint: unbalanced-off

# Stuff from Eftboren:

#define AE_CHS_ABILITY_CAMOUFLAGE
    [hides]
        id=AE_chs_camouflage
        name= _ "camouflage"
        special_note={SPECIAL_NOTES_CAMOUFLAGE}
        description= _ "This unit can hide in deserts and dunes, and remain undetected by its enemies.

Enemy units cannot see this unit while it is in desert or dunes, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter]
            [filter_location]
                terrain=D*^*,Hd
            [/filter_location]
        [/filter]
    [/hides]
#enddef

#define AE_CHS_ABILITY_SUSTENANCE
    [resistance]
        id=AE_chs_sustenance
        add=20
        max_value=30
        # apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            less_than=30
        [/filter_base_value]
        [filter]
            [filter_location]
                time_of_day=lawful
            [/filter_location]
        [/filter]
        name= _ "sustenance"
        description= _ "This unitâ€™s resistances are increased by 20% in daylight, on defense and attack. Vulnerabilities are not affected."
        affect_self=yes
    [/resistance]
#enddef
